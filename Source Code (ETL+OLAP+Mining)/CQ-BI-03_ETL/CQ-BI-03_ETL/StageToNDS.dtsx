<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/24/2020 6:06:52 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-OJ21T4T"
  DTS:CreatorName="DESKTOP-OJ21T4T\Kiet Huynh"
  DTS:DTSID="{875B107B-74BF-434A-9C66-4DCEBAF8A3A3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="1066"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="39"
  DTS:VersionGUID="{576B1236-2EF9-41EF-BE16-AF4569ACA4B2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.BI_NDS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{42E8BF47-2E1D-45B6-A171-8BEA3B9B4B36}"
      DTS:ObjectName="LocalHost.BI_NDS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=BI_NDS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.BI_Stage]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E10E816B-1414-4F97-8EDE-046FB5E4787F}"
      DTS:ObjectName="LocalHost.BI_Stage">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=BI_Stage;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Stage (District_Stage) to NDS (District)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0357105C-4AA7-4428-A1FD-C6D0EDF0A960}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage (District_Stage) to NDS (District)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat District"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat District"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu in NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">2</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert District NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[District]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].Columns[DistrictID]"
                      cachedDataType="i4"
                      cachedName="DistrictID"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictID]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].Columns[DistrictName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DistrictName"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictName]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictName]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictID]"
                      dataType="i4"
                      name="DistrictID" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DistrictName" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load District_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[District_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DistrictID]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]"
                      name="DistrictID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DistrictName]"
                      length="50"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictName]"
                      name="DistrictName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DistrictID]"
                      dataType="i4"
                      name="DistrictID" />
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DistrictName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DistrictName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DistrictID]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DistrictID]"
                      name="DistrictID" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DistrictName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DistrictName]"
                      name="DistrictName" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if DistrictID exists in District NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, DistrictID From District Where NguonDuLieu = 2</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, DistrictID From District Where NguonDuLieu = 2) [refTable]
where [refTable].[DistrictID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DistrictID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input].Columns[DistrictID]"
                      cachedDataType="i4"
                      cachedName="DistrictID"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DistrictID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update District NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update District
 Set DistrictName = ?, NgayCapNhat = ?
Where DistrictID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].Columns[DistrictName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DistrictName"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictName]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].Columns[DistrictID]"
                      cachedDataType="i4"
                      cachedName="DistrictID"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output].Columns[DistrictID]" />
                    <inputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output]"
              endId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output1]"
              endId="Package\Stage (District_Stage) to NDS (District)\Update District NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output2]"
              endId="Package\Stage (District_Stage) to NDS (District)\Insert District NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[Lookup Error Output]"
              endId="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[Lookup Match Output]"
              endId="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (District_Stage) to NDS (District).Paths[OLE DB Source Output]"
              endId="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{51CBBEAA-0D97-402F-8837-932A649E772E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage (Taxi_Zone_Stage) to  NDS (Location)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat Location"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat Location"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu in NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">2</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert Location NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Location]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[zone]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="zone"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[LocationName]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[zone]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[Shape_Area]"
                      cachedDataType="r8"
                      cachedName="Shape_Area"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[ShapeArea]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Area]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[Shape_Leng]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Shape_Leng"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[ShapeLeng]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Leng]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[DistrictID_NDS]"
                      cachedDataType="i4"
                      cachedName="DistrictID_NDS"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictID]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output].Columns[DistrictID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[the_geom_text]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="the_geom_text"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[The_Geom_Text]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom_text]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].Columns[LocationID]"
                      cachedDataType="i4"
                      cachedName="LocationID"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[LocationID]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[LocationID]"
                      dataType="i4"
                      name="LocationID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[LocationName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LocationName" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[ShapeArea]"
                      dataType="r8"
                      name="ShapeArea" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[ShapeLeng]"
                      dataType="r8"
                      name="ShapeLeng" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[The_Geom_Text]"
                      codePage="1252"
                      dataType="text"
                      name="The_Geom_Text" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[The_Geom]"
                      dataType="image"
                      name="The_Geom" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[DistrictID]"
                      dataType="i4"
                      name="DistrictID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load Taxi_Zone_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Taxi_Zone_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[OBJECTID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[OBJECTID]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[OBJECTID]"
                      name="OBJECTID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Leng]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[Shape_Leng]"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Leng]"
                      name="Shape_Leng"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom_text]"
                      codePage="1252"
                      dataType="text"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[the_geom_text]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom_text]"
                      name="the_geom_text"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom]"
                      dataType="image"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[the_geom]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom]"
                      name="the_geom"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Area]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[Shape_Area]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Area]"
                      name="Shape_Area"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[zone]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[zone]"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[zone]"
                      name="zone"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[LocationID]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]"
                      name="LocationID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[borough]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[borough]"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[borough]"
                      name="borough"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[OBJECTID]"
                      dataType="i4"
                      name="OBJECTID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[Shape_Leng]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Shape_Leng" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[the_geom_text]"
                      codePage="1252"
                      dataType="text"
                      name="the_geom_text" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[the_geom]"
                      dataType="image"
                      name="the_geom" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[Shape_Area]"
                      dataType="r8"
                      name="Shape_Area" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[zone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="zone" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[LocationID]"
                      dataType="i4"
                      name="LocationID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[borough]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="borough" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[OBJECTID]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[OBJECTID]"
                      name="OBJECTID" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[Shape_Leng]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[Shape_Leng]"
                      name="Shape_Leng" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[the_geom_text]"
                      codePage="1252"
                      dataType="text"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[the_geom_text]"
                      name="the_geom_text" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[the_geom]"
                      dataType="image"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[the_geom]"
                      name="the_geom" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[Shape_Area]"
                      dataType="r8"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[Shape_Area]"
                      name="Shape_Area" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[zone]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[zone]"
                      name="zone" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[LocationID]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[LocationID]"
                      name="LocationID" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[borough]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[borough]"
                      name="borough" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if DistrictID exists in District NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, DistrictID, DistrictName From District Where NguonDuLieu = 2</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, DistrictID, DistrictName From District Where NguonDuLieu = 2) [refTable]
where [refTable].[DistrictName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DistrictID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DistrictName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[borough]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input].Columns[borough]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="borough"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[borough]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DistrictName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output].Columns[DistrictID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output].Columns[DistrictID_NDS]"
                      name="DistrictID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if LocationID exists in Location NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, LocationID From Location Where NguonDuLieu = 2</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, LocationID From Location Where NguonDuLieu = 2) [refTable]
where [refTable].[LocationID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LocationID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input].Columns[LocationID]"
                      cachedDataType="i4"
                      cachedName="LocationID"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">LocationID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Location NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update Location
Set LocationName = ?, ShapeArea = ?, ShapeLeng = ?, The_Geom_Text = ?, DistrictID = ?, NgayCapNhat = ?
Where LocationID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[zone]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="zone"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[zone]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[Shape_Area]"
                      cachedDataType="r8"
                      cachedName="Shape_Area"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Area]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[Shape_Leng]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Shape_Leng"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[Shape_Leng]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[the_geom_text]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="the_geom_text"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[the_geom_text]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[DistrictID_NDS]"
                      cachedDataType="i4"
                      cachedName="DistrictID_NDS"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output].Columns[DistrictID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[LocationID]"
                      cachedDataType="i4"
                      cachedName="LocationID"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output].Columns[LocationID]" />
                    <inputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="r8"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="r8"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      codePage="1252"
                      dataType="text"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">193</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="dbTimeStamp"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="i4"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output1]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output2]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Error Output]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Match Output]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Match Output1]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[OLE DB Source Output]"
              endId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B0A0DBED-54C0-4112-9C6B-BABF8F8C1E9E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat PaymentType"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat RateCode"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat Vendor"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat PaymentType"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat RateCode"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat Vendor"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu from NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu in NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu of NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert PaymentType NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PaymentType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].Columns[PaymentTypeID]"
                      cachedDataType="i4"
                      cachedName="PaymentTypeID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].Columns[PaymentTypeName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PaymentTypeName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeName]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeID]"
                      dataType="i4"
                      name="PaymentTypeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PaymentTypeName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert RateCode NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[RateCode]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].Columns[RateCodeID]"
                      cachedDataType="i4"
                      cachedName="RateCodeID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[RateCodeID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].Columns[RateCodeName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RateCodeName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[RateCodeName]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[RateCodeID]"
                      dataType="i4"
                      name="RateCodeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input].ExternalColumns[RateCodeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RateCodeName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert Vendor NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Vendor]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].Columns[VendorID]"
                      cachedDataType="i4"
                      cachedName="VendorID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].Columns[VendorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="VendorName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorName]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorID]"
                      dataType="i4"
                      name="VendorID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="VendorName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load PaymentType_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PaymentType_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PaymentTypeID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]"
                      name="PaymentTypeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PaymentTypeName]"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeName]"
                      name="PaymentTypeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PaymentTypeID]"
                      dataType="i4"
                      name="PaymentTypeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PaymentTypeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PaymentTypeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PaymentTypeID]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PaymentTypeID]"
                      name="PaymentTypeID" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PaymentTypeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PaymentTypeName]"
                      name="PaymentTypeName" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load RateCode_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[RateCode_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RateCodeID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]"
                      name="RateCodeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RateCodeName]"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeName]"
                      name="RateCodeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RateCodeID]"
                      dataType="i4"
                      name="RateCodeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RateCodeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RateCodeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RateCodeID]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RateCodeID]"
                      name="RateCodeID" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RateCodeName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RateCodeName]"
                      name="RateCodeName" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load Vendor_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Vendor_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorID]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]"
                      name="VendorID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorName]"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorName]"
                      name="VendorName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorID]"
                      dataType="i4"
                      name="VendorID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="VendorName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorID]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorID]"
                      name="VendorID" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorName]"
                      name="VendorName" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if PaymentID exists in PaymenType NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, PaymentTypeID From PaymentType Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, PaymentTypeID From PaymentType Where NguonDuLieu = 1) [refTable]
where [refTable].[PaymentTypeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PaymentTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input].Columns[PaymentTypeID]"
                      cachedDataType="i4"
                      cachedName="PaymentTypeID"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">PaymentTypeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if RateCodeID exists in RateCode NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, RateCodeID From RateCode Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, RateCodeID From RateCode Where NguonDuLieu = 1) [refTable]
where [refTable].[RateCodeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RateCodeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input].Columns[RateCodeID]"
                      cachedDataType="i4"
                      cachedName="RateCodeID"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">RateCodeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if VendorID exists in Vendor NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, VendorID From Vendor Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, VendorID From Vendor Where NguonDuLieu = 1) [refTable]
where [refTable].[VendorID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="VendorID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input].Columns[VendorID]"
                      cachedDataType="i4"
                      cachedName="VendorID"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">VendorID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update PaymentType NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update PaymentType
 Set PaymentTypeName = ?, NgayCapNhat = ?
Where PaymentTypeID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].Columns[PaymentTypeName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PaymentTypeName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeName]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].Columns[PaymentTypeID]"
                      cachedDataType="i4"
                      cachedName="PaymentTypeID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output].Columns[PaymentTypeID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update RateCode NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update RateCode
Set RateCodeName = ?, NgayCapNhat = ?
Where RateCodeID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].Columns[RateCodeName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RateCodeName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeName]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].Columns[RateCodeID]"
                      cachedDataType="i4"
                      cachedName="RateCodeID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output].Columns[RateCodeID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Vendor NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update Vendor
 Set VendorName = ?, NgayCapNhat = ?
Where VendorID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].Columns[VendorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="VendorName"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorName]" />
                    <inputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].Columns[VendorID]"
                      cachedDataType="i4"
                      cachedName="VendorID"
                      externalMetadataColumnId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output7]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output6]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output5]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output8]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output3]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output2]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output1]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output4]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output1]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output2]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output1]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output2]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output1]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output2]"
              endId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BDA44980-740F-413A-99C5-040884046593}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayCapNhat YellowTaxiTrip"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NgayTao, NgayCapNhat YellowTaxiTrip"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayTao]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayTao]"
                      name="NgayTao"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]"
                      name="NgayCapNhat"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add NguonDuLieu in NDS"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]"
                      name="NguonDuLieu"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert YellowTaxiTrip NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[YellowTaxiTrip]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[NgayTao]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayTao"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayTao]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[YellowTaxiTripID]"
                      cachedDataType="i4"
                      cachedName="YellowTaxiTripID"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[YellowTaxiTripID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[VendorID_NDS]"
                      cachedDataType="i4"
                      cachedName="VendorID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output].Columns[VendorID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[tpep_pickup_datetime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tpep_pickup_datetime"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tpep_Pickup_Datetime]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_pickup_datetime]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[tpep_dropoff_datetime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tpep_dropoff_datetime"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tpep_Dropoff_Datetime]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_dropoff_datetime]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[passenger_count]"
                      cachedDataType="i4"
                      cachedName="passenger_count"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Passenger_Count]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[passenger_count]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[trip_distance]"
                      cachedDataType="r8"
                      cachedName="trip_distance"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Trip_Distance]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[trip_distance]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[RateCodeID_NDS]"
                      cachedDataType="i4"
                      cachedName="RateCodeID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[RatecodeID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output].Columns[RateCodeID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[store_and_fwd_flag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_and_fwd_flag"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Store_And_Fwd_Flag]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[store_and_fwd_flag]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[PaymentTypeID_NDS]"
                      cachedDataType="i4"
                      cachedName="PaymentTypeID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output].Columns[PaymentTypeID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[fare_amount]"
                      cachedDataType="r8"
                      cachedName="fare_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Fare_Amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[fare_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[extra]"
                      cachedDataType="r8"
                      cachedName="extra"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Extra]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[extra]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[mta_tax]"
                      cachedDataType="r8"
                      cachedName="mta_tax"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[MTA_Tax]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[mta_tax]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[tip_amount]"
                      cachedDataType="r8"
                      cachedName="tip_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tip_Amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tip_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[tolls_amount]"
                      cachedDataType="r8"
                      cachedName="tolls_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tolls_Amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tolls_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[improvement_surcharge]"
                      cachedDataType="r8"
                      cachedName="improvement_surcharge"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Improvement_Surcharge]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[improvement_surcharge]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[total_amount]"
                      cachedDataType="r8"
                      cachedName="total_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Total_Amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[total_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[PULocationID_NDS]"
                      cachedDataType="i4"
                      cachedName="PULocationID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[PULocationID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[PULocationID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].Columns[DOLocationID_NDS]"
                      cachedDataType="i4"
                      cachedName="DOLocationID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[DOLocationID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[DOLocationID_NDS]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Ma]"
                      dataType="i4"
                      name="Ma" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayTao]"
                      dataType="dbTimeStamp"
                      name="NgayTao" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NgayCapNhat]"
                      dataType="dbTimeStamp"
                      name="NgayCapNhat" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[NguonDuLieu]"
                      dataType="i4"
                      name="NguonDuLieu" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[YellowTaxiTripID]"
                      dataType="i4"
                      name="YellowTaxiTripID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[VendorID]"
                      dataType="i4"
                      name="VendorID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tpep_Pickup_Datetime]"
                      dataType="dbTimeStamp"
                      name="Tpep_Pickup_Datetime" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tpep_Dropoff_Datetime]"
                      dataType="dbTimeStamp"
                      name="Tpep_Dropoff_Datetime" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Passenger_Count]"
                      dataType="i4"
                      name="Passenger_Count" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Trip_Distance]"
                      dataType="r8"
                      name="Trip_Distance" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[RatecodeID]"
                      dataType="i4"
                      name="RatecodeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Store_And_Fwd_Flag]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Store_And_Fwd_Flag" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[PaymentTypeID]"
                      dataType="i4"
                      name="PaymentTypeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Fare_Amount]"
                      dataType="r8"
                      name="Fare_Amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Extra]"
                      dataType="r8"
                      name="Extra" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[MTA_Tax]"
                      dataType="r8"
                      name="MTA_Tax" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tip_Amount]"
                      dataType="r8"
                      name="Tip_Amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Tolls_Amount]"
                      dataType="r8"
                      name="Tolls_Amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Improvement_Surcharge]"
                      dataType="r8"
                      name="Improvement_Surcharge" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[Total_Amount]"
                      dataType="r8"
                      name="Total_Amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[PULocationID]"
                      dataType="i4"
                      name="PULocationID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input].ExternalColumns[DOLocationID]"
                      dataType="i4"
                      name="DOLocationID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load Yellow_Taxi_Trip_Stage from Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Yellow_Taxi_Trip_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_Stage]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[YellowTaxiTripID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]"
                      name="YellowTaxiTripID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]"
                      name="VendorID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_pickup_datetime]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tpep_pickup_datetime]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_pickup_datetime]"
                      name="tpep_pickup_datetime"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_dropoff_datetime]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tpep_dropoff_datetime]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_dropoff_datetime]"
                      name="tpep_dropoff_datetime"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[passenger_count]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[passenger_count]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[passenger_count]"
                      name="passenger_count"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[trip_distance]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[trip_distance]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[trip_distance]"
                      name="trip_distance"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[RatecodeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RatecodeID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[RatecodeID]"
                      name="RatecodeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[store_and_fwd_flag]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[store_and_fwd_flag]"
                      length="50"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[store_and_fwd_flag]"
                      name="store_and_fwd_flag"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[payment_type]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[payment_type]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[payment_type]"
                      name="payment_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[fare_amount]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[fare_amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[fare_amount]"
                      name="fare_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[extra]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[extra]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[extra]"
                      name="extra"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[mta_tax]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[mta_tax]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[mta_tax]"
                      name="mta_tax"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tip_amount]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tip_amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tip_amount]"
                      name="tip_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tolls_amount]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tolls_amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tolls_amount]"
                      name="tolls_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[improvement_surcharge]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[improvement_surcharge]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[improvement_surcharge]"
                      name="improvement_surcharge"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[total_amount]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[total_amount]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[total_amount]"
                      name="total_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[PULocationID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PULocationID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[PULocationID]"
                      name="PULocationID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[DOLocationID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DOLocationID]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[DOLocationID]"
                      name="DOLocationID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[YellowTaxiTripID]"
                      dataType="i4"
                      name="YellowTaxiTripID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[VendorID]"
                      dataType="i4"
                      name="VendorID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tpep_pickup_datetime]"
                      dataType="dbTimeStamp"
                      name="tpep_pickup_datetime" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tpep_dropoff_datetime]"
                      dataType="dbTimeStamp"
                      name="tpep_dropoff_datetime" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[passenger_count]"
                      dataType="i4"
                      name="passenger_count" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[trip_distance]"
                      dataType="r8"
                      name="trip_distance" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[RatecodeID]"
                      dataType="i4"
                      name="RatecodeID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[store_and_fwd_flag]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="store_and_fwd_flag" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[payment_type]"
                      dataType="i4"
                      name="payment_type" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[fare_amount]"
                      dataType="r8"
                      name="fare_amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[extra]"
                      dataType="r8"
                      name="extra" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[mta_tax]"
                      dataType="r8"
                      name="mta_tax" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tip_amount]"
                      dataType="r8"
                      name="tip_amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[tolls_amount]"
                      dataType="r8"
                      name="tolls_amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[improvement_surcharge]"
                      dataType="r8"
                      name="improvement_surcharge" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[total_amount]"
                      dataType="r8"
                      name="total_amount" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[PULocationID]"
                      dataType="i4"
                      name="PULocationID" />
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].ExternalColumns[DOLocationID]"
                      dataType="i4"
                      name="DOLocationID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[YellowTaxiTripID]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[YellowTaxiTripID]"
                      name="YellowTaxiTripID" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorID]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[VendorID]"
                      name="VendorID" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tpep_pickup_datetime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tpep_pickup_datetime]"
                      name="tpep_pickup_datetime" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tpep_dropoff_datetime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tpep_dropoff_datetime]"
                      name="tpep_dropoff_datetime" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[passenger_count]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[passenger_count]"
                      name="passenger_count" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[trip_distance]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[trip_distance]"
                      name="trip_distance" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RatecodeID]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[RatecodeID]"
                      name="RatecodeID" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[store_and_fwd_flag]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[store_and_fwd_flag]"
                      name="store_and_fwd_flag" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[payment_type]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[payment_type]"
                      name="payment_type" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[fare_amount]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[fare_amount]"
                      name="fare_amount" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[extra]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[extra]"
                      name="extra" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[mta_tax]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[mta_tax]"
                      name="mta_tax" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tip_amount]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tip_amount]"
                      name="tip_amount" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tolls_amount]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[tolls_amount]"
                      name="tolls_amount" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[improvement_surcharge]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[improvement_surcharge]"
                      name="improvement_surcharge" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[total_amount]"
                      dataType="r8"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[total_amount]"
                      name="total_amount" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PULocationID]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[PULocationID]"
                      name="PULocationID" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DOLocationID]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[DOLocationID]"
                      name="DOLocationID" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if DOLocationID exists in Location NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, LocationID From Location Where NguonDuLieu = 2</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, LocationID From Location Where NguonDuLieu = 2) [refTable]
where [refTable].[LocationID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LocationID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[DOLocationID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input].Columns[DOLocationID]"
                      cachedDataType="i4"
                      cachedName="DOLocationID"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[DOLocationID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">LocationID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[DOLocationID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[DOLocationID_NDS]"
                      name="DOLocationID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if PaymentTypeID exists in PaymentType NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, PaymentTypeID From PaymentType Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, PaymentTypeID From PaymentType Where NguonDuLieu = 1) [refTable]
where [refTable].[PaymentTypeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PaymentTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[payment_type]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input].Columns[payment_type]"
                      cachedDataType="i4"
                      cachedName="payment_type"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[payment_type]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">PaymentTypeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output].Columns[PaymentTypeID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output].Columns[PaymentTypeID_NDS]"
                      name="PaymentTypeID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if PULocationID exists in Location NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, LocationID From Location Where NguonDuLieu = 2</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, LocationID From Location Where NguonDuLieu = 2) [refTable]
where [refTable].[LocationID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LocationID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[PULocationID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input].Columns[PULocationID]"
                      cachedDataType="i4"
                      cachedName="PULocationID"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[PULocationID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">LocationID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[PULocationID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[PULocationID_NDS]"
                      name="PULocationID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if RateCodeID exists in RateCode NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, RateCodeID From RateCode Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, RateCodeID From RateCode Where NguonDuLieu = 1) [refTable]
where [refTable].[RateCodeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RateCodeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[RatecodeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input].Columns[RatecodeID]"
                      cachedDataType="i4"
                      cachedName="RatecodeID"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[RatecodeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">RateCodeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output].Columns[RateCodeID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output].Columns[RateCodeID_NDS]"
                      name="RateCodeID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if VendorID exists in Vendor NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, VendorID From Vendor Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, VendorID From Vendor Where NguonDuLieu = 1) [refTable]
where [refTable].[VendorID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="VendorID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input].Columns[VendorID]"
                      cachedDataType="i4"
                      cachedName="VendorID"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[VendorID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">VendorID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output].Columns[VendorID_NDS]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output].Columns[VendorID_NDS]"
                      name="VendorID_NDS"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Ma</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Select Ma, YellowTaxiTripID From YellowTaxiTrip Where NguonDuLieu = 1</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (Select Ma, YellowTaxiTripID From YellowTaxiTrip Where NguonDuLieu = 1) [refTable]
where [refTable].[YellowTaxiTripID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Ma" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="YellowTaxiTripID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1258</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input].Columns[YellowTaxiTripID]"
                      cachedDataType="i4"
                      cachedName="YellowTaxiTripID"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">YellowTaxiTripID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update YellowTaxiTrip NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update YellowTaxiTrip
Set VendorID = ?, Tpep_Pickup_Datetime = ?, Tpep_Dropoff_Datetime = ?, Passenger_Count = ?, Trip_Distance = ?, RatecodeID = ?, Store_And_Fwd_Flag = ?, PaymentTypeID = ?, Fare_Amount = ?, Extra = ?, MTA_Tax = ?, Tip_Amount = ?, Tolls_Amount = ?, Improvement_Surcharge = ?, Total_Amount = ?, PULocationID = ?, DOLocationID = ?, NgayCapNhat = ?
Where YellowTaxiTripID = ? and NguonDuLieu = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.BI_NDS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[tpep_pickup_datetime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tpep_pickup_datetime"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_pickup_datetime]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[tpep_dropoff_datetime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="tpep_dropoff_datetime"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tpep_dropoff_datetime]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[passenger_count]"
                      cachedDataType="i4"
                      cachedName="passenger_count"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[passenger_count]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[trip_distance]"
                      cachedDataType="r8"
                      cachedName="trip_distance"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[trip_distance]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[RateCodeID_NDS]"
                      cachedDataType="i4"
                      cachedName="RateCodeID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output].Columns[RateCodeID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[VendorID_NDS]"
                      cachedDataType="i4"
                      cachedName="VendorID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output].Columns[VendorID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[store_and_fwd_flag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_and_fwd_flag"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[store_and_fwd_flag]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[PaymentTypeID_NDS]"
                      cachedDataType="i4"
                      cachedName="PaymentTypeID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output].Columns[PaymentTypeID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[fare_amount]"
                      cachedDataType="r8"
                      cachedName="fare_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[fare_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[extra]"
                      cachedDataType="r8"
                      cachedName="extra"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[extra]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[mta_tax]"
                      cachedDataType="r8"
                      cachedName="mta_tax"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[mta_tax]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[tip_amount]"
                      cachedDataType="r8"
                      cachedName="tip_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tip_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[improvement_surcharge]"
                      cachedDataType="r8"
                      cachedName="improvement_surcharge"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[improvement_surcharge]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[total_amount]"
                      cachedDataType="r8"
                      cachedName="total_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[total_amount]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[PULocationID_NDS]"
                      cachedDataType="i4"
                      cachedName="PULocationID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[PULocationID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[DOLocationID_NDS]"
                      cachedDataType="i4"
                      cachedName="DOLocationID_NDS"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output].Columns[DOLocationID_NDS]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[YellowTaxiTripID]"
                      cachedDataType="i4"
                      cachedName="YellowTaxiTripID"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[YellowTaxiTripID]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[NguonDuLieu]"
                      cachedDataType="i4"
                      cachedName="NguonDuLieu"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output].Columns[NguonDuLieu]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[NgayCapNhat]"
                      cachedDataType="dbTimeStamp"
                      cachedName="NgayCapNhat"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output].Columns[NgayCapNhat]" />
                    <inputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].Columns[tolls_amount]"
                      cachedDataType="r8"
                      cachedName="tolls_amount"
                      externalMetadataColumnId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output].Columns[tolls_amount]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="dbTimeStamp"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="dbTimeStamp"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">193</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="r8"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="i4"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="i4"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="r8"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="r8"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="r8"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="r8"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      dataType="r8"
                      name="Param_12">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      dataType="r8"
                      name="Param_13">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      dataType="r8"
                      name="Param_14">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      dataType="i4"
                      name="Param_15">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      dataType="i4"
                      name="Param_16">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      dataType="dbTimeStamp"
                      name="Param_17">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      dataType="i4"
                      name="Param_18">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      dataType="i4"
                      name="Param_19">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output1]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output2]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Outputs[Derived Column Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Error Output]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output1]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output2]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output3]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output4]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output5]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[OLE DB Source Output]"
              endId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7FC2B4E2-E1AD-4D18-B36A-A3A3B7BFA095}"
      DTS:From="Package\Stage (District_Stage) to NDS (District)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{06E59AA2-35F0-4CB8-809D-F3C91424A847}"
      DTS:From="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B6C2913D-C90E-472D-9518-C6B30956632A}"
      DTS:From="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="262.4,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)"
          TopLeft="240.728719828302,40.6298282584693" />
        <NodeLayout
          Size="288,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)"
          TopLeft="224.949498780362,128.354725507792" />
        <NodeLayout
          Size="549.6,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)"
          TopLeft="100.793652510157,229.890674644214" />
        <NodeLayout
          Size="342.4,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)"
          TopLeft="197.14286050018,330.352945809546" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="370.439109304332,82.2298282584693">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.1248972493222"
              Start="0,0"
              End="0,38.6248972493222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.6248972493222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="372.271575645259,169.954725507792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9359491364219"
              Start="0,0"
              End="0,52.4359491364219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4359491364219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="371.968256505168,271.490674644214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.8622711653329"
              Start="0,0"
              End="0,51.3622711653329">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.3622711653329" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Stage (District_Stage) to NDS (District)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165.6,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Insert District NDS"
          TopLeft="605.555565868105,423.137260836301" />
        <NodeLayout
          Size="270.4,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS"
          TopLeft="311.904767216468,207.320264345497" />
        <NodeLayout
          Size="248,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Add NgayTao, NgayCapNhat District"
          TopLeft="557.93651743811,329.673207237921" />
        <NodeLayout
          Size="224.8,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage"
          TopLeft="330.6349262656,28.7189546511385" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Add NguonDuLieu in NDS"
          TopLeft="342.380958211665,116.235295747803" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Update District NDS"
          TopLeft="182.539685648315,419.738567978178" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\Stage (District_Stage) to NDS (District)\Add NgayCapNhat District"
          TopLeft="166.666669504983,322.026148307145" />
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[OLE DB Source Output]"
          TopLeft="442.307942238632,70.3189546511385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.9163410966647"
              Start="0,0"
              End="0,38.4163410966647">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.4163410966647" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[Lookup Match Output]"
          TopLeft="403.371433883135,248.920264345497">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-136.704764378152,73.1058839616479"
              Start="0,0"
              End="-136.704764378152,65.6058839616479">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5003743515826" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5003743515826"
                    Point2="0,29.5003743515826"
                    Point3="-4,29.5003743515826" />
                  <mssgle:LineSegment
                    End="-132.704764378152,29.5003743515826" />
                  <mssgle:CubicBezierSegment
                    Point1="-132.704764378152,29.5003743515826"
                    Point2="-136.704764378152,29.5003743515826"
                    Point3="-136.704764378152,33.5003743515826" />
                  <mssgle:LineSegment
                    End="-136.704764378152,65.6058839616479" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.543768907826,34.5003743515826,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[Lookup Error Output]"
          TopLeft="490.838100549802,248.920264345497">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="191.098416888309,80.7529428924243"
              Start="0,0"
              End="191.098416888309,73.2529428924243">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5861875436489" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5861875436489"
                    Point2="0,32.5861875436489"
                    Point3="4,32.5861875436489" />
                  <mssgle:LineSegment
                    End="187.098416888309,32.5861875436489" />
                  <mssgle:CubicBezierSegment
                    Point1="187.098416888309,32.5861875436489"
                    Point2="191.098416888309,32.5861875436489"
                    Point3="191.098416888309,36.5861875436489" />
                  <mssgle:LineSegment
                    End="191.098416888309,73.2529428924243" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.6828217254045,37.5861875436489,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output2]"
          TopLeft="685.146041653108,371.273207237921">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.8640535983795"
              Start="0,0"
              End="0,44.3640535983795">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.3640535983795" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output1]"
          TopLeft="267.603177576649,363.626148307145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.112419671033"
              Start="0,0"
              End="0,48.612419671033">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.612419671033" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (District_Stage) to NDS (District).Paths[Derived Column Output]"
          TopLeft="444.342862714067,157.835295747803">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.4849685976937"
              Start="0,0"
              End="0,41.9849685976937">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.9849685976937" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (District_Stage) to NDS (District)\Insert District NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (District_Stage) to NDS (District)\Lookup if DistrictID exists in District NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (District_Stage) to NDS (District)\Load District_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS"
          TopLeft="724.090909090909,472.575757575757" />
        <NodeLayout
          Size="283.2,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS"
          TopLeft="379.166666666666,291.666666666667" />
        <NodeLayout
          Size="255.2,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayTao, NgayCapNhat Location"
          TopLeft="690.454545454545,389.166666666667" />
        <NodeLayout
          Size="270.4,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS"
          TopLeft="383.333333333334,201.666666666667" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NguonDuLieu in NDS"
          TopLeft="419,118.666666666667" />
        <NodeLayout
          Size="178.4,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Update Location NDS"
          TopLeft="211.363636363636,465.151515151515" />
        <NodeLayout
          Size="206.4,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Add NgayCapNhat Location"
          TopLeft="203,375.424242424242" />
        <NodeLayout
          Size="240.8,41.6"
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage"
          TopLeft="393.878787878788,35.2121212121212" />
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[OLE DB Source Output]"
          TopLeft="516.239393939394,76.8121212121212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.8545454545455"
              Start="0,0"
              End="0,34.3545454545455">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3545454545455" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Match Output1]"
          TopLeft="474.9,333.266666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-168.7,42.1575757575758"
              Start="0,0"
              End="-168.7,34.6575757575758">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0051344909772" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0051344909772"
                    Point2="0,17.0051344909772"
                    Point3="-4,17.0051344909772" />
                  <mssgle:LineSegment
                    End="-164.7,17.0051344909772" />
                  <mssgle:CubicBezierSegment
                    Point1="-164.7,17.0051344909772"
                    Point2="-168.7,17.0051344909772"
                    Point3="-168.7,21.0051344909772" />
                  <mssgle:LineSegment
                    End="-168.7,34.6575757575758" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-132.54138671875,22.0051344909772,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Match Output]"
          TopLeft="519.65,243.266666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.3999999999998"
              Start="0,0"
              End="0,40.8999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.8999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,14.6453124999999,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Lookup Error Output]"
          TopLeft="566.633333333333,333.266666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="251.421212121212,55.8999999999999"
              Start="0,0"
              End="251.421212121212,48.3999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5484269662921" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5484269662921"
                    Point2="0,22.5484269662921"
                    Point3="4,22.5484269662921" />
                  <mssgle:LineSegment
                    End="247.421212121212,22.5484269662921" />
                  <mssgle:CubicBezierSegment
                    Point1="247.421212121212,22.5484269662921"
                    Point2="251.421212121212,22.5484269662921"
                    Point3="251.421212121212,26.5484269662921" />
                  <mssgle:LineSegment
                    End="251.421212121212,48.3999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="79.844219341856,27.5484269662921,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output2]"
          TopLeft="814.272727272727,430.766666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.8090909090908"
              Start="0,0"
              End="0,34.3090909090908">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3090909090908" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output1]"
          TopLeft="303.381818181818,417.024242424242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.1272727272727"
              Start="0,0"
              End="0,40.6272727272727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.6272727272727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Taxi_Zone_Stage) to  NDS (Location).Paths[Derived Column Output]"
          TopLeft="518.366666666667,160.266666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.4000000000001"
              Start="0,0"
              End="0,33.9000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.9000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Insert Location NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if LocationID exists in Location NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Lookup if DistrictID exists in District NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Taxi_Zone_Stage) to  NDS (Location)\Load Taxi_Zone_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="199.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu of NDS"
          TopLeft="957.380955373349,155.36798061516" />
        <NodeLayout
          Size="184,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update RateCode NDS"
          TopLeft="108.873016143332,978.056225697363" />
        <NodeLayout
          Size="225.6,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage"
          TopLeft="223.968256760617,60" />
        <NodeLayout
          Size="279.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat PaymentType"
          TopLeft="1172.93651459979,368.805892105278" />
        <NodeLayout
          Size="212,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu from NDS"
          TopLeft="264.047622040015,666.386286800322" />
        <NodeLayout
          Size="271.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS"
          TopLeft="205.238097711485,238.601309694358" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NguonDuLieu in NDS"
          TopLeft="235.714288706682,147.516341096665" />
        <NodeLayout
          Size="203.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update PaymentType NDS"
          TopLeft="789.206349476665,458.037919512201" />
        <NodeLayout
          Size="200.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat Vendor"
          TopLeft="60,353.307193656006" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Update Vendor NDS"
          TopLeft="75.8730161433318,451.019613327039" />
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS"
          TopLeft="1220.55556302979,462.269945703657" />
        <NodeLayout
          Size="305.6,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS"
          TopLeft="911.904764378152,251.452949212853" />
        <NodeLayout
          Size="248.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat Vendor"
          TopLeft="451.269847933127,360.954252586783" />
        <NodeLayout
          Size="256,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage"
          TopLeft="926.468256760618,65.3516395184953" />
        <NodeLayout
          Size="212.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat RateCode"
          TopLeft="93,880.34380602633" />
        <NodeLayout
          Size="178.4,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS"
          TopLeft="531.888896363122,981.454918555486" />
        <NodeLayout
          Size="260.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayTao, NgayCapNhat RateCode"
          TopLeft="484.269847933127,887.990864957107" />
        <NodeLayout
          Size="295.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS"
          TopLeft="220.738097711485,765.637922064682" />
        <NodeLayout
          Size="231.2,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Add NgayCapNhat PaymentType"
          TopLeft="781.666666666667,361.158833174501" />
        <NodeLayout
          Size="236.8,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage"
          TopLeft="255.30159009395,574.536612370324" />
        <NodeLayout
          Size="166.4,41.6"
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS"
          TopLeft="498.888896363122,454.418306185162" />
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output2]"
          TopLeft="335.841272733649,101.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.9163410966647"
              Start="0,0"
              End="0,38.4163410966647">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.4163410966647" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output]"
          TopLeft="1055.72460606698,106.951639518495">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.4163410966647"
              Start="0,0"
              End="0,40.9163410966647">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.9163410966647" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[OLE DB Source Output1]"
          TopLeft="371.874606066983,616.136612370324">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.2496744299979"
              Start="0,0"
              End="0,42.7496744299979">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.7496744299979" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output2]"
          TopLeft="296.971431044818,280.201309694358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-136.571431044818,73.105883961648"
              Start="0,0"
              End="-136.571431044818,65.605883961648">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4996176924421" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.4996176924421"
                    Point2="0,29.4996176924421"
                    Point3="-4,29.4996176924421" />
                  <mssgle:LineSegment
                    End="-132.571431044818,29.4996176924421" />
                  <mssgle:CubicBezierSegment
                    Point1="-132.571431044818,29.4996176924421"
                    Point2="-136.571431044818,29.4996176924421"
                    Point3="-136.571431044818,33.4996176924421" />
                  <mssgle:LineSegment
                    End="-136.571431044818,65.605883961648" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.477102241159,34.4996176924421,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output1]"
          TopLeft="320.471431044818,807.237922064682">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121.071431044818,73.1058839616483"
              Start="0,0"
              End="-121.071431044818,65.6058839616483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4788146648587" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.4788146648587"
                    Point2="0,29.4788146648587"
                    Point3="-4,29.4788146648587" />
                  <mssgle:LineSegment
                    End="-117.071431044818,29.4788146648587" />
                  <mssgle:CubicBezierSegment
                    Point1="-117.071431044818,29.4788146648587"
                    Point2="-121.071431044818,29.4788146648587"
                    Point3="-121.071431044818,33.4788146648587" />
                  <mssgle:LineSegment
                    End="-121.071431044818,65.6058839616483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-108.727102241159,34.4788146648587,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Match Output]"
          TopLeft="1015.10476437815,293.052949212853">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.838097711485,68.1058839616478"
              Start="0,0"
              End="-117.838097711485,60.6058839616478">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4551844720393" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.4551844720393"
                    Point2="0,27.4551844720393"
                    Point3="-4,27.4551844720393" />
                  <mssgle:LineSegment
                    End="-113.838097711485,27.4551844720393" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.838097711485,27.4551844720393"
                    Point2="-117.838097711485,27.4551844720393"
                    Point3="-117.838097711485,31.4551844720393" />
                  <mssgle:LineSegment
                    End="-117.838097711485,60.6058839616478" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.110435574492,32.4551844720393,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output2]"
          TopLeft="416.204764378152,807.237922064682">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198.465083554975,80.7529428924252"
              Start="0,0"
              End="198.465083554975,73.2529428924252">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5623726595871" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5623726595871"
                    Point2="0,32.5623726595871"
                    Point3="4,32.5623726595871" />
                  <mssgle:LineSegment
                    End="194.465083554975,32.5623726595871" />
                  <mssgle:CubicBezierSegment
                    Point1="194.465083554975,32.5623726595871"
                    Point2="198.465083554975,32.5623726595871"
                    Point3="198.465083554975,36.5623726595871" />
                  <mssgle:LineSegment
                    End="198.465083554975,73.2529428924252" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.3661550587375,37.5623726595871,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output1]"
          TopLeft="384.704764378152,280.201309694358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190.965083554975,80.752942892425"
              Start="0,0"
              End="190.965083554975,73.252942892425">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5853517360636" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5853517360636"
                    Point2="0,32.5853517360636"
                    Point3="4,32.5853517360636" />
                  <mssgle:LineSegment
                    End="186.965083554975,32.5853517360636" />
                  <mssgle:CubicBezierSegment
                    Point1="186.965083554975,32.5853517360636"
                    Point2="190.965083554975,32.5853517360636"
                    Point3="190.965083554975,36.5853517360636" />
                  <mssgle:LineSegment
                    End="190.965083554975,73.252942892425" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.6161550587375,37.5853517360636,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Lookup Error Output]"
          TopLeft="1114.30476437815,293.052949212853">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198.231750221642,75.7529428924248"
              Start="0,0"
              End="198.231750221642,68.2529428924248">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5379051035087" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5379051035087"
                    Point2="0,30.5379051035087"
                    Point3="4,30.5379051035087" />
                  <mssgle:LineSegment
                    End="194.231750221642,30.5379051035087" />
                  <mssgle:CubicBezierSegment
                    Point1="194.231750221642,30.5379051035087"
                    Point2="198.231750221642,30.5379051035087"
                    Point3="198.231750221642,34.5379051035087" />
                  <mssgle:LineSegment
                    End="198.231750221642,68.2529428924248" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.249488392071,35.5379051035087,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output4]"
          TopLeft="1060.84285987575,196.96798061516">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.4849685976934"
              Start="0,0"
              End="0,46.9849685976934">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.9849685976934" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output1]"
          TopLeft="337.876193209084,189.116341096665">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.4849685976933"
              Start="0,0"
              End="0,41.9849685976933">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.9849685976933" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output2]"
          TopLeft="578.879372148125,402.554252586783">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.864053598379"
              Start="0,0"
              End="0,44.364053598379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.364053598379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output3]"
          TopLeft="200.136508071666,921.94380602633">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.1124196710327"
              Start="0,0"
              End="0,48.6124196710327">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.6124196710327" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output8]"
          TopLeft="894.036508071666,402.758833174501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.2790863376997"
              Start="0,0"
              End="0,47.7790863376997">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.7790863376997" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output5]"
          TopLeft="369.19285987575,707.986286800322">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.6516352643599"
              Start="0,0"
              End="0,50.1516352643599">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1516352643599" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output6]"
          TopLeft="617.879372148125,929.590864957107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.864053598379"
              Start="0,0"
              End="0,44.364053598379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.364053598379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output7]"
          TopLeft="161.136508071666,394.907193656006">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.112419671033"
              Start="0,0"
              End="0,48.612419671033">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.612419671033" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode).Paths[Derived Column Output]"
          TopLeft="1315.74603881479,410.405892105278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.864053598379"
              Start="0,0"
              End="0,44.364053598379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.364053598379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load Vendor_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if VendorID exists in Vendor NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert PaymentType NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if PaymentID exists in PaymenType NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load PaymentType_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert RateCode NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Lookup if RateCodeID exists in RateCode NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Load RateCode_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Vendor_Stage, PaymentType_Stage, RateCode_Stage) to NDS (Vendor, Payment, RateCode)\Insert Vendor NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS"
          TopLeft="426.0670995671,434.816017316017" />
        <NodeLayout
          Size="340.8,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS"
          TopLeft="123.642857142856,234.383116883116" />
        <NodeLayout
          Size="296,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS"
          TopLeft="572.809523809524,118.74935064935" />
        <NodeLayout
          Size="198.4,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NguonDuLieu in NDS"
          TopLeft="355.666666666667,20.0259740259741" />
        <NodeLayout
          Size="272,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage"
          TopLeft="22.9502164502168,21.3333333333333" />
        <NodeLayout
          Size="295.2,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS"
          TopLeft="1001.83333333333,24.6666666666667" />
        <NodeLayout
          Size="298.4,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS"
          TopLeft="152.404761904762,121.820779220779" />
        <NodeLayout
          Size="271.2,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS"
          TopLeft="605.238095238095,23.0259740259746" />
        <NodeLayout
          Size="284,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayTao, NgayCapNhat YellowTaxiTrip"
          TopLeft="378.502164502164,344.383116883116" />
        <NodeLayout
          Size="207.2,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Update YellowTaxiTrip NDS"
          TopLeft="24.0541125541125,440.367965367966" />
        <NodeLayout
          Size="236,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Add NgayCapNhat YellowTaxiTrip"
          TopLeft="9.49999999999986,346.354978354978" />
        <NodeLayout
          Size="332.8,41.6"
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS"
          TopLeft="983.642857142858,118.868398268398" />
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[OLE DB Source Output]"
          TopLeft="294.950216450217,41.4796536796537">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.71645021645,0"
              Start="0,0"
              End="53.21645021645,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.21645021645,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output5]"
          TopLeft="572.809523809524,141.085064935065">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-122.004761904763,0"
              Start="0,0"
              End="-114.504761904763,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-114.504761904763,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-105.443767671131,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output4]"
          TopLeft="983.642857142858,139.608874458874">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-114.833333333334,0"
              Start="0,0"
              End="-107.333333333334,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-107.333333333334,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-101.858053385417,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output3]"
          TopLeft="297.823809523809,163.420779220779">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70.962337662337"
              Start="0,0"
              End="0,63.462337662337">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.462337662337" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,25.9264813311685,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output2]"
          TopLeft="1149.7380952381,66.2666666666668">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.601731601731"
              Start="0,0"
              End="0,45.101731601731">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.101731601731" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,16.7461783008655,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output1]"
          TopLeft="876.438095238095,44.6463203463207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="125.395238095238,0"
              Start="0,0"
              End="117.895238095238,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="117.895238095238,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="10.756232328869,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Match Output]"
          TopLeft="238.576190476189,275.983116883116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-111.076190476189,70.371861471862"
              Start="0,0"
              End="-111.076190476189,62.871861471862">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3460488732454" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.3460488732454"
                    Point2="0,28.3460488732454"
                    Point3="-4,28.3460488732454" />
                  <mssgle:LineSegment
                    End="-107.076190476189,28.3460488732454" />
                  <mssgle:CubicBezierSegment
                    Point1="-107.076190476189,28.3460488732454"
                    Point2="-111.076190476189,28.3460488732454"
                    Point3="-111.076190476189,32.3460488732454" />
                  <mssgle:LineSegment
                    End="-111.076190476189,62.871861471862" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-103.729481956845,33.3460488732454,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Lookup Error Output]"
          TopLeft="349.509523809523,275.983116883116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="170.992640692641,68.4"
              Start="0,0"
              End="170.992640692641,60.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5517757009346" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5517757009346"
                    Point2="0,27.5517757009346"
                    Point3="4,27.5517757009346" />
                  <mssgle:LineSegment
                    End="166.992640692641,27.5517757009346" />
                  <mssgle:CubicBezierSegment
                    Point1="166.992640692641,27.5517757009346"
                    Point2="170.992640692641,27.5517757009346"
                    Point3="170.992640692641,31.5517757009346" />
                  <mssgle:LineSegment
                    End="170.992640692641,60.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="39.6299336275707,32.5517757009346,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output2]"
          TopLeft="523.684632034632,385.983116883116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.832900432901"
              Start="0,0"
              End="0,41.332900432901">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.332900432901" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output1]"
          TopLeft="127.577056277056,387.954978354978">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.412987012988"
              Start="0,0"
              End="0,44.912987012988">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.912987012988" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip).Paths[Derived Column Output]"
          TopLeft="554.066666666667,42.3259740259743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51.1714285714281,0"
              Start="0,0"
              End="43.6714285714281,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.6714285714281,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PaymentTypeID exists in PaymentType NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Insert YellowTaxiTrip NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if YellowTaxiTripID exists in YellowTaxiTrip NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if VendorID exists in Vendor NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if DOLocationID exists in Location NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Load Yellow_Taxi_Trip_Stage from Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if PULocationID exists in Location NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Stage (Yellow_Tax_Trip_Stage) to NDS (YellowTaxiTrip)\Lookup if RateCodeID exists in RateCode NDS">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>